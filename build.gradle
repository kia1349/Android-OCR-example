// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        // App version and version code
        app_version_name = '0.1.0'
        app_version_code = 10

        compile_sdk_version = 28
        target_sdk_version = 28

        versions = [
                'kotlin_plugin'      : '1.3.20',
                'kotlin_env'         : 'jdk8',

                // Kotlin coroutines
                // https://github.com/Kotlin/kotlinx.coroutines
                // https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-android
                'kotlin_coroutines'  : '1.1.0',

                // AndroidX appcompat
                // https://mvnrepository.com/artifact/androidx.appcompat/appcompat
                'androidx_appcompat' : '1.0.2',
                // AndroidX Kotlin
                // https://mvnrepository.com/artifact/androidx.core/core-ktx
                'androidx_ktx'       : '1.0.1',
                // Support library version
                // https://developer.android.com/topic/libraries/support-library/revisions.html
                'support_lib'        : '28.0.0',
                /*
                 * https://developer.android.com/training/constraint-layout/index.html
                 * https://dl.google.com/dl/android/maven2/com/android/support/constraint/group-index.xml
                */
                'constranint_layout' : '1.1.3',
                // Android Architecture Components
                // https://developer.android.com/topic/libraries/architecture/adding-components.html
                'lifecycle'          : '1.1.1',

                // Picasso
                // http://square.github.io/picasso/
                'picasso'            : '2.71828',

                // Retrofit 2
                // http://square.github.io/retrofit/
                'retrofit'           : '2.5.0',

                // TessTwo
                // https://github.com/rmtheis/tess-two
                'tess_two'           : '9.0.0',

                // OkHttp interceptor
                // https://github.com/square/okhttp
                'ok_http_interceptor': '3.12.1',

                // Dagger 2
                // https://github.com/google/dagger
                // See version at,
                // https://mvnrepository.com/artifact/com.google.dagger/dagger
                // https://mvnrepository.com/artifact/com.google.dagger/dagger-compiler
                'dagger_2'           : '2.21',

                // Fabric - Crashlytics lib
                // https://fabric.io/kits/android/crashlytics/install
                'crashlytics'        : '2.9.8',

                // https://github.com/sheungon/AndroidEasyLog
                'android_ec_log'     : '0.2.2',
        ]
    }
    repositories {
        google()
        jcenter()
        // For Fabric
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin_plugin"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        /*
        * For Fabric
        * https://s3.amazonaws.com/fabric-artifacts/public/io/fabric/tools/gradle/maven-metadata.xml
        * */
        classpath 'io.fabric.tools:gradle:1.27.0'
    }
}

allprojects {
    repositories {
        google()
        jcenter()

        // For Fabric
        maven { url 'https://maven.fabric.io/public' }
    }
}

subprojects {
    /*
    * Fix dependency error
    * https://github.com/JakeWharton/u2020/blob/9870fa4291f5c813ed929aec26c94bee2b92d2b7/build.gradle#L105-L113
    * */
    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                // Force all of the primary support libraries to use the same version.
                if (details.requested.group == 'com.android.support'
                        && details.requested.name != 'multidex'
                        && details.requested.name != 'multidex-instrumentation') {
                    details.useVersion "$versions.support_lib"
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
